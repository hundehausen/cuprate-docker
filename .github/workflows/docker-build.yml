name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*.*.*'  # Will trigger on semantic version tags (v1.0.0, v2.1.3, etc.)
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short

      - name: Get Cuprate commit hash
        id: cuprate-commit
        run: |
          # Clone Cuprate repository temporarily to get latest commit hash
          git clone --depth 1 https://github.com/Cuprate/cuprate.git /tmp/cuprate
          cd /tmp/cuprate
          CUPRATE_COMMIT=$(git rev-parse --short HEAD)
          echo "CUPRATE_COMMIT=$CUPRATE_COMMIT" >> $GITHUB_ENV
          echo "cuprate_commit=$CUPRATE_COMMIT" >> $GITHUB_OUTPUT

      - name: Determine Docker tags
        id: docker-tags
        run: |
          # If this is a semantic version tag, use that
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "Using semantic version tag: ${{ steps.meta.outputs.tags }}"
          else
            # Otherwise use latest + short commit hash of cuprate
            echo "Using Cuprate commit hash: ${{ steps.cuprate-commit.outputs.cuprate_commit }}"
            echo "ADDITIONAL_TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.cuprate-commit.outputs.cuprate_commit }}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}${{ env.ADDITIONAL_TAGS != '' && format(',{0}', env.ADDITIONAL_TAGS) || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
